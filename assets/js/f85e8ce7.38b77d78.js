"use strict";(self.webpackChunkcs_1101_teach=self.webpackChunkcs_1101_teach||[]).push([[948],{9613:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(9496);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),m=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=m(r),d=n,_=u["".concat(l,".").concat(d)]||u[d]||p[d]||s;return r?a.createElement(_,o(o({ref:t},c),{},{components:r})):a.createElement(_,o({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var m=2;m<s;m++)o[m]=r[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9709:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var a=r(2081),n=(r(9496),r(9613));const s={id:"studio-11",title:"Studio 11"},o=void 0,i={unversionedId:"studio-11",id:"studio-11",title:"Studio 11",description:"Link to slides//docs.google.com/presentation/d/13hISojDHe83MF51phnodxHjmo0JIgwBQ1hhyqGCz8GQ/edit?usp=sharing",source:"@site/docs/week-11.md",sourceDirName:".",slug:"/studio-11",permalink:"/CS1101S-teach/studio-11",draft:!1,editUrl:"https://github.com/shenyih0ng/CS1101S-teach/tree/main/docs/week-11.md",tags:[],version:"current",frontMatter:{id:"studio-11",title:"Studio 11"},sidebar:"tutorialSidebar",previous:{title:"Studio 10",permalink:"/CS1101S-teach/studio-10"},next:{title:"Studio 12",permalink:"/CS1101S-teach/studio-12"}},l={},m=[{value:"Studio Worksheets",id:"studio-worksheets",level:2},{value:"Stream Formulation \ud83c\udf0a",id:"stream-formulation-",level:2},{value:"<code>inverse_stream</code>",id:"inverse_stream",level:3},{value:"<code>zip_stream</code>",id:"zip_stream",level:3},{value:"<code>factorial_stream</code>",id:"factorial_stream",level:3},{value:"<code>sum_stream</code>",id:"sum_stream",level:3},{value:"<code>create_power_series</code>",id:"create_power_series",level:3},{value:"<code>e^x</code>",id:"ex",level:3},{value:"<code>cos(x)</code>",id:"cosx",level:3},{value:"<code>sin(x)</code>",id:"sinx",level:3}],c={toc:m};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vSmiwmlCLT7hXKJqTlumxlprjUYHwClj5X3qFcC_-Pg55uT5-YwKhISaBXL1ELNjT9TVufc8qbD2kf2/embed?start=false&loop=false&delayms=3000",frameborder:"0",width:"100%",height:"569",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true"}),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Link to slides: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.google.com/presentation/d/13hISojDHe83MF51phnodxHjmo0JIgwBQ1hhyqGCz8GQ/edit?usp=sharing"},"https://docs.google.com/presentation/d/13hISojDHe83MF51phnodxHjmo0JIgwBQ1hhyqGCz8GQ/edit?usp=sharing"))),(0,n.kt)("h2",{id:"studio-worksheets"},"Studio Worksheets"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://drive.google.com/file/d/1GKVQ-atOEg4PNSR835IpXoWIh_ul1EJE/view?usp=sharing"},"Studio 11 In-class Worksheet")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://drive.google.com/file/d/1OEe6MlZNyvQSvgUrMhh2LkD6uQrVsdUm/view?usp=sharing"},"Studio 11 Extra Worksheet"))),(0,n.kt)("h2",{id:"stream-formulation-"},"Stream Formulation \ud83c\udf0a"),(0,n.kt)("h3",{id:"inverse_stream"},(0,n.kt)("inlineCode",{parentName:"h3"},"inverse_stream")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"function inverse_stream(s) {\n  // Alternatives:\n  // stream_map(x => 1 / x, s);\n  return is_null(s)\n    ? null\n    : pair(1 / head(s), () => inverse_stream(stream_tail(s)));\n}\n")),(0,n.kt)("h3",{id:"zip_stream"},(0,n.kt)("inlineCode",{parentName:"h3"},"zip_stream")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"function zip_streams(s1, s2) {\n  return is_null(s1)\n    ? s2\n    : is_null(s2)\n    ? s1\n    : pair(head(s1), () => zip_streams(s2, stream_tail(s1)));\n}\n")),(0,n.kt)("h3",{id:"factorial_stream"},(0,n.kt)("inlineCode",{parentName:"h3"},"factorial_stream")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const factorial_stream = pair(1, () =>\n  mul_streams(factorial_stream, integers_from(1))\n);\n")),(0,n.kt)("h3",{id:"sum_stream"},(0,n.kt)("inlineCode",{parentName:"h3"},"sum_stream")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"function sum_stream(s) {\n  const result_stream = pair(head(s), () =>\n    add_streams(result_stream, stream_tail(s))\n  );\n  return result_stream;\n}\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Returns a stream where it represents the cumulative sum of the original stream")),(0,n.kt)("h3",{id:"create_power_series"},(0,n.kt)("inlineCode",{parentName:"h3"},"create_power_series")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"function create_power_series(x, series) {\n  return mul_streams(series, pow_stream(x, integers_from(0)));\n}\n\n// 1 + 2(2)+ 2(2^2) + 2(2^3) + ...\ncreate_power_series(2, integers_from(1));\n")),(0,n.kt)("h3",{id:"ex"},(0,n.kt)("inlineCode",{parentName:"h3"},"e^x")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const ex_coeff_stream = inverse_stream(factorial_stream);\nconst ex_approx_stream = (x) => create_power_series(x, ex_coeff_stream);\n\n// Returns a stream of the approx value of e^2\n// e^2 = 7.38905609893\n// sum_stream: list(1, 3, 5, 6.333333333333333, 7, 7.266666666666667, 7.355555555555555 ...\nsum_stream(ex_approx_stream(2));\n")),(0,n.kt)("h3",{id:"cosx"},(0,n.kt)("inlineCode",{parentName:"h3"},"cos(x)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const cos_coeff_stream = mul_streams(\n  inverse_stream(factorial_stream),\n  zip_streams(alt_ones, zeros)\n);\nconst cos_approx_stream = (x) => create_power_series(x, cos_coeff_stream);\n\n// Returns a stream of the approx value of cos(pi/6)\n// cos(pi/6) = 3^0.5 / 2\n// sum_stream: list(1, 1, 0.8629221610959812, 0.8629221610959812, 0.8660538834157472 ...\nsum_stream(cos_approx_stream(math_PI / 6));\n")),(0,n.kt)("h3",{id:"sinx"},(0,n.kt)("inlineCode",{parentName:"h3"},"sin(x)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const sin_coeff_stream = mul_streams(\n  inverse_stream(factorial_stream),\n  zip_streams(zeros, alt_ones)\n);\nconst sin_approx_stream = (x) => create_power_series(x, sin_coeff_stream);\n\n// Returns a stream of the approx value of sin(pi/6)\n// sin(pi/6) = 1/2\n// sum_stream: list(0, 0.5235987755982988, 0.5235987755982988, 0.49967417939436376, 0.49967417939436376 ...\nsum_stream(sin_approx_stream(math_PI / 6));\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Note how similar ",(0,n.kt)("inlineCode",{parentName:"p"},"sin_coeff_stream")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"cos_coeff_stream")," is!")))}p.isMDXComponent=!0}}]);